##Day 0

#inputting stuff:
For reading a string input
use,
const input =readLine();

#printing stuff:
 using console.log(some_variable)
 
#Data types:
 Number data type
      declaration: var var1 = 1;
 String 
      declaration: var first_string="Hello";
      Js strings are immutable
      Some methods 
           A substring of the original by picking individual letters or using String.substr().
           A concatenation of two strings using the concatenation operator (+) or String.concat().
  Boolean
  Symbol
  Null
  Undefined
  
  
  The typeofOpearator:
  usage example
  var secondVar = 'Hello'; 
  console.log(secondVar + " is a " + typeof secondVar);
  will print:
  Hello is a string
  
  While an input is read thru readLine() method it is in form of a string threfore to process it as a number use Number() method
  
  
  ##Day 1
  Arithmetic operators:
                  all smae a c++ 
                  exceptions ---- exponentiation is doen using **
                  postfix and prefix operations are allowed in js
                
   Functions:
                  declared using function keyword
                  example of a function 
                  function factorial(n) {
                if (n > 1) {
                    return n * factorial(n - 1);
                }
                // Returns 1 if n <= 1
                return 1;
            }
       
           
    var:
      We use the var keyword to declare variables. The scope of a variable declared using this keyword is within the context wherever        it was declared. For variables declared outside any function, this means they are globally available throughout the program.        For variables declared within a function, this means they are only available within the function itself.
    
    let
    We use the let keyword to declare variables that are limited in scope to the block, statement, or expression in which they are used. This is unlike the var keyword, which defines a variable globally or locally to an entire function regardless of block scope.

 
##Day 2
      Conditional statements:
      if staement is same as cpp
      if (condition1) {
    statement1;
} 
else if (condition2) {
    statement2;
} 
else if (conditionN) {
    statementN;
} 
else {
    statementLast;
}
 
 
 Loops:
       for loop:
               for (var i = 1; i <= input; i++) {
        process.stdout.write(i + " ");
    }
    
    While loop:
while (i <= input) {
        process.stdout.write(i + " ");

        i++;
        
        Do while loop:
        do {
        process.stdout.write(i + " ");

        i++;
    } while (i <= input);
}

For in loop:
for (var property in actress) {
    console.log("actress." + property + " = " + actress[property]);
}

For of loop:
 for (let value of array) {
        console.log(value);


    
